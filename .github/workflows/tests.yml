name: tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: "npm"
      - run: npm install --global yarn

      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - run: yarn install
        if: steps.yarn-cache.outputs.cache-hit != 'true'
      - run: yarn run clean
      - run: yarn run test
      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: "npm"
      - run: npm install --global yarn

      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - run: yarn install
        if: steps.yarn-cache.outputs.cache-hit != 'true'
      - run: yarn run clean
      - run: yarn run lint --max-warnings=0

  demo-site:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: "npm"
      - run: npm install --global yarn

      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - run: yarn install
        if: steps.yarn-cache.outputs.cache-hit != 'true'
      - run: yarn run clean
      - run: yarn run build:demo
      - name: Check if there is any change
        id: get-changes
        run: echo "::set-output name=changed::$(git status --porcelain | wc -l)"
      - name: Do something if there is any change
        if: steps.get-changes.outputs.changed != 0
        run: echo "Commit docs changes by running yarn run build:demo"
